apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: ansible-collection-gitlab-template
  title: Create Ansible Collection Project
  description: Create a new starter collection Git project preconfigured with best practices including a GitLab CI Pipeline.
  tags:
    - recommended
    - ansible
    - collection
    - gitlab
spec:
  owner: ansible-authors
  system: ansible
  type: service
  parameters:
    - title: Provide information about the new component
      required:
        - repoOwner
        - repoName
        - owner
        - collectionNamespace
        - collectionName
      properties:
        sourceControl:
          title: Select source control option
          type: string
          description: Select the source control option for your Ansible project.
          default: github.com
          enum:
            - github.com
          enumNames:
            - 'GitHub'
        repoOwner:
          title: Source code repository organization name or username
          type: string
          description: The organization name or username of your source code repository. For example, “my-github-username”.
          maxLength: 100
        repoName:
          title: Collection repository name
          description: The name of the new collection project repository. For example, “my-new-collection-repo”.
          type: string
          maxLength: 100
        description:
          title: Collection description
          type: string
          description: Describe the collection and its purpose to help other users understand what to use it for.
          maxLength: 350
        collectionNamespace:
          title: Collection namespace
          description: The new collection project's namespace. For example, “my_new_collection_namespace”.
          type: string
          maxLength: 63
          minLength: 2
          pattern: '^[a-z][a-z0-9_]+$'
        collectionName:
          title: Collection name
          description: The new collection project's name. For example, “my_new_collection_name”.
          type: string
          maxLength: 63
          minLength: 2
          pattern: '^[a-z][a-z0-9_]+$'
        owner:
          title: Catalog Owner name
          type: string
          description: The Red Hat Developer Hub catalog item owner. This will appear on the “My items” tab. For example, “my-devhub-username”.
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
        system:
          title: System
          type: string
          description: The Red Hat Developer Hub system catalog item name. This will appear on the “My items” tab. For example, “my-devhub-system”.
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - System
  steps:
    - id: templateSource
      name: Generating the source code component
      action: fetch:template
      input:
        url: ./skeletons/gitlab_collection
        targetPath: ./source
        values:
          ${{ values.collectionNamespace }}: ${{ values.collectionName }}

    - id: catalogTemplate
      name: Generating the Catalog Info Component
      action: fetch:template
      input:
        url: ../catalog-info/
        values:
          repoUrl: ${{ steps.ansible.output.repoUrl }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: collection-project
          description: ${{ parameters.description }}
          collectionNamespace: ${{ parameters.collectionNamespace }}
          collectionName: ${{ parameters.collectionName }}
          sourceControl: ${{ parameters.sourceControl }}
          devSpacesBaseUrl: ${{ steps.ansible.output.devSpacesBaseUrl }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - ${{ parameters.sourceControl }}
        description: ${{ parameters.description }}
        repoUrl: ${{ steps.ansible.output.repoUrl }}
        repoVisibility: 'public'
        defaultBranch: main

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}

      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
